qplot(wt, mpg, data=mtcars, color=as.factor(cyl)) +
geom_smooth(method="lm", formula=y~x) +
geom_point(size=4)
qplot(wt, mpg, data=mtcars, color=as.factor(cyl)) +
geom_smooth(method="lm", formula=y~x) +
geom_point(size=3)
?ppois
lambda <- 0.2
nosim <- 1000
n <- 40
mns <- NULL
E <- 1/lamba
for (i in 1:nosim) mns = c(msn, mean(rpois(n,lambda)))
g1 <- ggplot() +aes(mns) + geom_histogram(binwidth=0.2, color="black", fill =
"salmon", aes(y=..density..))
g1 + xlab("sample means")
g1 + geom_density((size =1))
g1 + geom_vline(xintercept = E, size =2)
lambda <- 0.2
nosim <- 1000
n <- 40
mns <- NULL
E <- 1/lamba
for (i in 1:nosim) mns = c(msn, mean(rpois(n,lambda)))
g1 <- ggplot() +aes(mns) + geom_histogram(binwidth=0.2, color="black", fill =
"salmon", aes(y=..density..))
g1 + xlab("sample means")
g1 + geom_density((size =1))
E <- 1/lamba
E <- 1/lambda
for (i in 1:nosim) mns = c(msn, mean(rpois(n,lambda)))
for (i in 1:nosim) mns = c(mns, mean(rpois(n,lambda)))
g1 <- ggplot() +aes(mns) + geom_histogram(binwidth=0.2, color="black", fill =
"salmon", aes(y=..density..))
g1 + xlab("sample means")
g1 + geom_density((size =1))
g1 + geom_vline(xintercept = E, size =2)
lambda <- 0.2
nosim <- 10000
n <- 40
mns <- NULL
E <- 1/lambda
for (i in 1:nosim) mns = c(mns, mean(rpois(n,lambda)))
g1 <- ggplot() +aes(mns) + geom_histogram(binwidth=0.2, color="black", fill =
"salmon", aes(y=..density..))
g1 <- g1 + xlab("sample means")
g1 <- g1 + geom_density((size =1))
g1 <- g1 + geom_vline(xintercept = E, size =2)
print(g1)
lambda <- 0.2
nosim <- 1000
n <- 400
mns <- NULL
E <- 1/lambda
for (i in 1:nosim) mns = c(mns, mean(rpois(n,lambda)))
g1 <- ggplot() +aes(mns) + geom_histogram(binwidth=0.2, color="black", fill =
"salmon", aes(y=..density..))
g1 <- g1 + xlab("sample means")
g1 <- g1 + geom_density((size =1))
g1 <- g1 + geom_vline(xintercept = E, size =2)
print(g1)
library(manipulate)
library(ggplot2)
toPower <- 0
myplot <- function(toPower){
x <- seq(-5,5,0.01)
y <- x^toPower
df <- data.frame(x,y)
g <- qplot(x,y, geom = "point")
print(g)
}
manipulate(
myplot(toPower),
toPower = slider(-7, 7, step = 0.5, initial = 0)
)
x <- seq(-5,5,0.01)
?qplot
y <- x^(-1)
View(y)
toPower <- 0
myplot <- function(toPower){
x <- seq(-5,5,0.01)
y <- x^toPower
df <- data.frame(x,y)
g <- qplot(x,na.exclude(y), geom = "point")
print(g)
}
manipulate(
myplot(toPower),
toPower = slider(-7, 7, step = 0.5, initial = 0)
)
myplot <- function(toPower){
x <- seq(-5,5,0.01)
y <- x^toPower
df <- data.frame(x,y)
g <- qplot(x,na.exclude(y), geom = "line")
print(g)
}
manipulate(
myplot(toPower),
toPower = slider(-7, 7, step = 0.5, initial = 0)
)
myplot <- function(toPower){
x <- seq(-5,5,0.01)
y <- x^toPower
df <- data.frame(x,y)
g <- ggplot(na.omit(df), aes(x=x, y=y), geom = "line")
print(g)
}
manipulate(
myplot(toPower),
toPower = slider(-7, 7, step = 0.5, initial = 0)
)
myplot <- function(toPower){
x <- seq(-5,5,0.01)
y <- x^toPower
df <- data.frame(x,y)
g <- ggplot(na.omit(df), aes(x=x, y=y), geom = "line", color="black", size=3)
print(g)
}
manipulate(
myplot(toPower),
toPower = slider(-7, 7, step = 0.5, initial = 0)
)
myplot <- function(toPower){
x <- seq(-5,5,0.01)
y <- x^toPower
df <- data.frame(x,y)
g <- qplot(na.omit(df), geom = "line")
print(g)
}
manipulate(
myplot(toPower),
toPower = slider(-7, 7, step = 0.5, initial = 0)
)
myplot <- function(toPower){
x <- seq(-5,5,0.01)
y <- x^toPower
df <- data.frame(x,y)
g <- qplot(x, na.omit(y), geom = "line")
print(g)
}
manipulate(
myplot(toPower),
toPower = slider(-7, 7, step = 0.5, initial = 0)
)
myplot <- function(toPower){
x <- seq(-5,5,0.01)
y <- x^toPower
df <- data.frame(x,y)
g <- qplot(x, y, geom = "line")
print(g)
}
manipulate(
myplot(toPower),
toPower = slider(-7, 7, step = 0.5, initial = 0)
)
myplot <- function(toPower){
x <- seq(-5,5,0.01)
y <- x^toPower
df <- data.frame(x,y)
df[!is.infinite(df)] <- NA
g <- qplot(x, y, geom = "line")
print(g)
}
manipulate(
myplot(toPower),
toPower = slider(-7, 7, step = 0.5, initial = 0)
)
myplot <- function(toPower){
x <- seq(-5,5,0.01)
y <- x^toPower
df <- data.frame(x,y)
idx <- apply(df, 1, function(z) all(is.infinite(z)))
df <- df[idx, ]
g <- qplot(x, y, geom = "line")
print(g)
}
manipulate(
myplot(toPower),
toPower = slider(-7, 7, step = 0.5, initial = 0)
)
manipulate(
myplot(toPower),
toPower = slider(-4, 7, step = 0.5, initial = 0)
)
lambda <- 0.2
nosim <- 1000
n <- 40
mns <- NULL
E <- 1/lambda
for (i in 1:nosim) mns = c(mns, mean(rexp(n,lambda)))
g1 <- ggplot() +aes(mns) + geom_histogram(binwidth=0.2, color="black", fill =
"salmon", aes(y=..density..))
g1 <- g1 + xlab("sample means")
g1 <- g1 + geom_density((size =1))
g1 <- g1 + geom_vline(xintercept = E, size =2)
print(g1)
g1 <- ggplot() +aes(mns) + geom_histogram(binwidth=0.2, color="black", fill =
"salmon", aes(y=density))
g1 <- g1 + xlab("sample means")
g1 <- g1 + geom_density((size =1))
g1 <- g1 + geom_vline(xintercept = E, size =2)
print(g1)
g1 <- ggplot() +aes(mns) + geom_histogram(binwidth=0.2, color="black", fill =
"salmon", aes(y=..density..))
g1 <- g1 + xlab("sample means")
g1 <- g1 + geom_density((size =1))
g1 <- g1 + geom_vline(xintercept = E, size =2)
print(g1)
g1 <- ggplot() +aes(mns) + geom_histogram(binwidth=0.2, color="black", fill =
"salmon", aes(y=..density..))
g1 <- g1 + xlab("sample means")
g1 <- g1 + geom_density((size = 1))
g1 <- g1 + geom_vline(xintercept = E, size =2)
print(g1)
g1 <- ggplot() +aes(mns) + geom_histogram(binwidth=0.2, color="black", fill =
"salmon", aes(y=..density..))
print(g1)
g1 <- g1 + xlab("sample means")
print(g1)
g1 <- g1 + geom_density((size = 1))
?geom_density
g1 <- g1 + geom_density(size = 1)
g1 <- g1 + geom_vline(xintercept = E, size =2)
print(g1)
myplot <- function(lambda, nosim, n){
mns <- NULL
E <- 1/lambda
for (i in 1:nosim) mns = c(mns, mean(rexp(n,lambda)))
g1 <- ggplot() +aes(mns) + geom_histogram(binwidth=0.2, color="black", fill =
"salmon", aes(y=..density..))
g1 <- g1 + xlab("sample means")
g1 <- g1 + geom_density(size = 1)
g1 <- g1 + geom_vline(xintercept = E, size =2)
print(g1)
}
manipulate(
myplot(lambda, nosim, n),
lambda = slider(1, 10, step = 1, initial = 1),
nosim = slider(1, 10000, step = 100, initial = 1000),
n = slider(1, 50, step=1, initial = 30)
)
manipulate(
myplot(lambda, nosim, n),
lambda = slider(0.1, 2, step = 0.1, initial = 1),
nosim = slider(1, 10000, step = 100, initial = 1000),
n = slider(1, 50, step=1, initial = 30)
)
manipulate(
myplot(lambda, nosim, n),
lambda = slider(0.1, 2, step = 0.1, initial = 1),
nosim = slider(1, 10000, step = 100, initial = 1000),
n = slider(5, 50, step=5, initial = 30)
)
manipulate(
myplot(lambda, nosim, n),
lambda = slider(0.1, 2, step = 0.1, initial = 1),
nosim = slider(100, 10000, step = 100, initial = 1000),
n = slider(5, 50, step=5, initial = 30)
)
?airquality
library(googleVis)
data("airquality")
?gvisMotionChart
View(airquality)
Time <- seq(as.Date("1973/5/1"), as.Date("1973/9/1"), by="day")
Time <- seq(as.Date("1973/5/1"), as.Date("1973/9/31"), by="day")
Time <- seq(as.Date("1973/5/1"), as.Date("1973/9/30"), by="day")
airquality <- cbind(airquality,Time)
View(airquality)
library(googleVis)
data("airquality")
Time <- seq(as.Date("1973/5/1"), as.Date("1973/9/30"), by="day")
airquality <- cbind(airquality,Time)
M <- gvisMotionChart(airquality, "Ozone", "Time")
print(M)
M <- gvisMotionChart(airquality, "Ozone", "Time")
print(M)
print(M, "chart")
M <- gvisMotionChart(airquality, "Ozone", "Time", options = list(width=600, height=600))
print(M, "chart")
plot(M)
View(airquality)
mass <- 80
height <- 1.75
BMI <- mass/1.75^2
mass <- 71
height <- 1.98
BMI <- mass/1.75^2
BMI <- mass/height^2
mass <- seq(40, 120, by = 0.1)
height <- seq(1.50, 2.15, by 0.1)
height <- seq(1.50, 2.15, by = 0.1)
height <- seq(1.50, 2.15, by = 0.01)
height <- seq(1.50, 2.15, by = 0.001)
height <- seq(1.50, 2.15, by = 0.001)
BMI <- mass/height^2
?solve
a <- sqrt(mass/18.5)
plot(a,mass)
mass <- seq(40, 130, by = 0.1)
mass <- seq(40, 140, by = 0.1)
height <- seq(1.50, 2.20, by = 0.001)
height <- seq(1.40, 2.20, by = 0.001)
height <- seq(1.30, 2.30, by = 0.001)
mass <- seq(40, 140, by = 0.1)
height <- seq(1.30, 2.30, by = 0.001)
h_bmi_185 <- sqrt(mass/18.5)
h_bmi_25 <- sqrt(mass/25)
h_bmi_30 <- sqrt(mass/30)
h_bmi_40 <- sqrt(mass/40)
library(ggplot2)
?ggplot
df_bmi <- data.frame("mass"=mass, "185_line"=h_bmi_185, 25_line=h_bmi_25,
df_bmi <- data.frame(mass=mass, 185_line=h_bmi_185, 25_line=h_bmi_25, 30_line=h_bmi_30, 40_line=h_bmi_40)
df_bmi <- data.frame(mass=mass, 185line=h_bmi_185, 25line=h_bmi_25, 30line=h_bmi_30, 40line=h_bmi_40)
df_bmi <- data.frame(mass=mass, h_bmi_185=h_bmi_185)
View(df_bmi)
df_bmi <- data.frame(mass=mass, h_bmi_185=h_bmi_185, h_bmi_25=h_bmi_25, h_bmi_30=h_bmi_30, h_bmi_40=h_bmi_40)
View(df_bmi)
df_bmi <- data.frame(mass=mass, height=height, h_bmi_185=h_bmi_185, h_bmi_25=h_bmi_25, h_bmi_30=h_bmi_30, h_bmi_40=h_bmi_40)
View(df_bmi)
g <- ggplot(data=df_bmi, aes(x=mass)) +geom_area((aes(y=height, fill=height, group=height), stat="bin"))
g <- ggplot(data=df_bmi, aes(x=mass))
print(g)
g <- ggplot(data=df_bmi, aes(x=mass, y=height))
print(g)
huron <- data.frame(year = 1875:1972, level = as.vector(LakeHuron))
h <- ggplot(huron, aes(year))
print(h)
h + geom_ribbon(aes(ymin=0, ymax=level))
h + geom_area(aes(y = level))
h +
geom_ribbon(aes(ymin = level - 1, ymax = level + 1), fill = "grey70") +
geom_line(aes(y = level))
print(g)
g +geom_area((aes(x=mass, y=height, fill=h_bmi_185), stat="bin"))
g + geom_area(aes(x=mass, y=height, fill=h_bmi_185), stat="bin")
g <- ggplot(data=df_bmi, aes(x=mass, y=height))
g + geom_area(aes(x=mass, fill=h_bmi_185), stat="bin")
g <- ggplot(data=df_bmi, aes(x=mass))
g + geom_area(aes(x=mass, fill=h_bmi_185), stat="bin")
g <- ggplot(data=df_bmi, aes(x=mass, y=height))
print(g)
g + geom_line()
g + geom_line(aes(x=mass, y=h_bmi_185)) + geom_area(position="fill")
print(g)
g + geom_line(aes(x=mass, y=h_bmi_185)) + geom_area(position="fill")
g <- ggplot(data=df_bmi, aes(x=mass, y=height))
g + geom_line(aes(x=mass, y=h_bmi_185))
g + xlim(1.50, 2.20)
print(g)
g <- ggplot(data=df_bmi, aes(x=mass, y=height))
g + geom_line(aes(x=mass, y=h_bmi_185))
g + xlim(1.50, 2.20)
print(g)
p <- ggplot(df_bmi, aes(x=mass))
print(p)
p + geom_area(stat = "bin")
P + geom_are(aes(y=..density..), stat="bin")
p + geom_are(aes(y=..density..), stat="bin")
p + geom_area(aes(y=..density..), stat="bin")
df <- data.frame(mass=mass, h_bmi_185=h_bmi_185, h_bmi_25=h_bmi_25, h_bmi_30=h_bmi_30, h_bmi_40=h_bmi_40)
df <- data.frame(mass=mass, h_bmi_185=h_bmi_185, h_bmi_25=h_bmi_25, h_bmi_30=h_bmi_30, h_bmi_40=h_bmi_40)
p <- ggplot(df, aes(x=mass,y=height)) + theme(legend.position="none")
p + geom_area(aes(fill=variable))
p + geom_area(aes(fill=variable),position='fill')
print(p)
?rep
a <- rep(c(18.5,25,30,40), each=4)
df <- data.frame(mass=rep(mass,each=4), bmi=rep(c(18.5,25,30,40), each=4))
df <- data.frame(mass=rep(mass,each=4), bmi=rep(c(18.5,25,30,40),4))
df <- data.frame(mass=rep(mass,each=4))
View(df)
length(mass)
df <- data.frame(mass=rep(mass,each=4), bmi=rep(c(18.5,25,30,40),length.out=leng(mass)*4))
df <- data.frame(mass=rep(mass,each=4), bmi=rep(c(18.5,25,30,40),length.out=lengt(mass)*4))
df <- data.frame(mass=rep(mass,each=4), bmi=rep(c(18.5,25,30,40),length.out=length(mass)*4))
View(df)
df <- data.frame(mass=rep(mass,each=nr.rep), bmi=rep(c(18.5,25,30,40),length.out=length(mass)*nr.rep),height=rep(0,length.out=length(mass)*nr.rep)))
df <- data.frame(mass=rep(mass,each=nr.rep), bmi=rep(c(18.5,25,30,40),length.out=length(mass)*nr.rep),height=rep(0,length.out=length(mass)*nr.rep))
nr.rep <- 4 # number of repetitions
df <- data.frame(mass=rep(mass,each=nr.rep), bmi=rep(c(18.5,25,30,40),length.out=length(mass)*nr.rep),height=rep(0,length.out=length(mass)*nr.rep))
View(df)
for (i in 1:length(mass))
{    for(j in 1:nr.rep)
{        counter <- counter+1
if j==1
View(df)
df <- data.frame(mass=rep(mass,each=nr.rep), bmi=rep(c(18.5,25,30,40),length.out=length(mass)*nr.rep),height=sqrt(mass/bmi)))
df <- data.frame(mass=rep(mass,each=nr.rep), bmi=rep(c(18.5,25,30,40),length.out=length(mass)*nr.rep),height=rep(0,length.out=length(mass)*nr.rep))
length(df)
nrow(df)
for (i in 1:nrow(df)){
counter <- counter+1
df$height[i,] <- sqrt(df$mass[i,]/df$bmi[i,])
}
counter <- 0
for (i in 1:nrow(df)){
counter <- counter+1
df$height[i,] <- sqrt(df$mass[i,]/df$bmi[i,])
}
View(df_bmi)
View(df)
for (i in 1:nrow(df)){
counter <- counter+1
df$height[i] <- sqrt(df$mass[i]/df$bmi[i])
}
View(df)
p <- ggplot(df, aes(x=mass,y=height)) + theme(legend.position="none")
p + geom_area(aes(fill=bmi))
p + geom_area(aes(fill=bmi),position='fill')
print(p)
p <- ggplot(df, aes(x=mass,y=height)) + theme(legend.position="none")
print(p)
p + geom_area(aes(fill=bmi))
p <- ggplot(df, aes(x=mass,y=height)) + theme(legend.position="none")
p + geom_area(aes(fill=height))
ggplot(df, aes(x=mass, y=height, group=bmi, fill=bmi)) + geom_area(position="fill")
View(df)
ggplot(df, aes(x=mass, y=height, group=bmi, fill=bmi)) + geom_area()
ggplot(df, aes(x=mass, y=height, group=bmi, fill=bmi)) + geom_area()
z + scale_y_discrete(breaks=seq(1.50,2.20, by=0.1))
z <- ggplot(df, aes(x=mass, y=height, group=bmi, fill=bmi)) + geom_area()
z + scale_y_discrete(breaks=seq(1.50,2.20, by=0.1))
print(z)
summary(df)
z <- ggplot(df, aes(x=mass, y=height, group=bmi, fill=bmi)) + geom_area()
z + ylim(1.50, 2.20)
print(z)
z <- ggplot(df, aes(x=mass, y=height, group=bmi, fill=bmi)) + geom_area(aes(y=height))
print(z)
z <- ggplot(df, aes(x=mass, y=height, group=bmi, fill=bmi)) + geom_area()
print(z)
time <- rep(seq(40, 140, by = 0.1),4)
var <- rep(c(18.5,25,30,40),length.out=length(time))
df_question <- data.frame(time=time,var=var,value=rep(0,length.out=length(time)))
# forloop to calculate values
counter <- 0
for (i in 1:nrow(df_question)){
counter <- counter+1
df_question$value[i] <- sqrt(df$time[i]/df$var[i])
}
View(df_question)
time <- rep(seq(40, 140, by = 0.1),4)
var <- rep(c(18.5,25,30,40),length.out=length(time))
df_question <- data.frame(time=time,var=var,value=rep(0,length.out=length(time)))
counter <- 0
counter <- 0
for (i in 1:nrow(df_question)){
counter <- counter+1
df_question$value[i] <- sqrt(df$time[i]/df$var[i])
}
nrow(df_question)
sqrt(df$time[1]/df$var[1])
for (i in 1:nrow(df_question)){
df_question$value[i] <- sqrt(df_question$time[i]/df_question$var[i])
}
q <- ggplot(df_question, aes(x=time, y=value, group=var, fill=var)) +geom_area()
print(q)
head(df)
head(df_question)
q <- ggplot(df_question, aes(x=time, y=value, group=var, fill=var)) + geom_area()
print(q)
time <- rep(seq(40, 140, by = 0.1),each=4)
var <- rep(c(18.5,25,30,40),length.out=length(time))
df_question <- data.frame(time=time,var=var,value=rep(0,length.out=length(time)))
for (i in 1:nrow(df_question)){
df_question$value[i] <- sqrt(df_question$time[i]/df_question$var[i])
}
q <- ggplot(df_question, aes(x=time, y=value, group=var, fill=var)) + geom_area()
print(q)
summary(df_question)
q <- ggplot(df_question, aes(x=time, y=value, group=var, fill=var)) + geom_line()
print(q) #
q <- ggplot(df_question, aes(x=time, y=value)) + geom_area(aes(group=var, fill=var))
print(q) #
setwd("P:/Mijn Hardeschijf/Data Science/Coursera/DataProducts/ShinyApp")
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
?fluidPage
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
install_github('slidify', 'ramnathv'); install_github('slidifyLibraries', 'ramnathv')
library(devtools)
install_github('slidify', 'ramnathv'); install_github('slidifyLibraries', 'ramnathv')
library(slidify)
setwd("P:/Mijn Hardeschijf/Data Science/Coursera/DataProducts/DataProductsGit")
author("DataProductsPresentation")
?framework
?numericInput
More often than not these people will use the latest techniques and wearables to monitor themselves. Besides being quite expensive all the data can be quite overwhelming if you are not able to handle the data correctly.
publish("BMIapp", "index.html", host="rbups")
?publish_rpubs
publish_rpubs("BMIapp", html_file="index.html")
